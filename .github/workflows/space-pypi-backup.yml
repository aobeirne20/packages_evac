name: Backup JetBrains Space PyPI Repository

on:
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install requests
          sudo apt-get update && sudo apt-get install -y jq

      - name: Download all versions and metadata
        run: |
          mkdir -p packages metadata
          packages=(alpenbar alpenglow-cereal alpenglow-datamodel alpenglow-nexus)

          for pkg in "${packages[@]}"; do
            echo "Fetching metadata for $pkg..."
            curl -s -w "\nHTTP_STATUS:%{http_code}" \
              "https://pypi.pkg.jetbrains.space/alpenglow/p/alpenglow/$pkg/json" \
              -o "metadata/$pkg.json" > "metadata/${pkg}_status.txt"

            code=$(tail -n1 metadata/${pkg}_status.txt | sed 's/HTTP_STATUS://')
            if [[ "$code" != "200" ]]; then
              echo "❌ Failed to fetch metadata for $pkg (status $code)"
              rm "metadata/$pkg.json"
              continue
            fi

            if ! jq . "metadata/$pkg.json" > /dev/null 2>&1; then
              echo "❌ Invalid JSON for $pkg"
              cat "metadata/$pkg.json"
              rm "metadata/$pkg.json"
              continue
            fi

            versions=$(jq -r '.releases | keys[]' metadata/$pkg.json)
            echo "Found versions for $pkg: $versions"

            for version in $versions; do
              files=$(jq -r --arg ver "$version" '.releases[$ver][]?.url' metadata/$pkg.json)
              for url in $files; do
                echo "Downloading $url"
                fname=$(basename "$url")
                curl -s -L "$url" -o "packages/$fname"
              done
            done
          done

          echo "Creating manifest.json"
          jq -s '.' metadata/*.json > manifest.json

      - name: Upload backup as artifact
        uses: actions/upload-artifact@v4
        with:
          name: space-pypi-backup
          path: |
            packages
            metadata
            manifest.json
